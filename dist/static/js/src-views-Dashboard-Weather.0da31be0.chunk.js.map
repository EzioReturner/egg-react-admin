{"version":3,"sources":["webpack:///./src/api/dashboard.js","webpack:///./src/views/Dashboard/Weather.tsx"],"names":["getWeather","io","get","params","key","city","extensions","Weather","state","data","weekName","then","res","status","forecasts","Number","setState","casts","map","daypower","daytemp","dayweather","week","icon","indexOf","this","WeatherItem","index","className","getWeatherIcon","bordered","bodyStyle","padding","hoverable","Moment","format","React","PureComponent"],"mappings":"mHAAA,4EAEe,SAASA,IACtB,OAAOC,UAAGC,IAAI,kDAAmD,CAC/DC,OAAQ,CACNC,IAAK,mCACLC,KAAM,OACNC,WAAY,W,unCCWZC,E,yQACJC,MAAsB,CACpBC,KAAM,GACNC,SAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,Q,8SAGlC,IAAD,OAClBV,oBAAaW,MAAK,SAACC,GAAc,IACvBC,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,UACO,IAAnBC,OAAOF,IACT,EAAKG,SAAS,CACZP,KAAMK,EAAU,GAAGG,MAAMC,KAAI,SAACN,GAE5B,MAAO,CACLO,SAF8CP,EAAxCO,SAGNC,QAH8CR,EAA9BQ,QAIhBC,WAJ8CT,EAArBS,WAKzBC,KAL8CV,EAATU,gB,qCAalCD,GACb,IAAIE,EAAO,KAaX,OAZIF,EAAWG,QAAQ,WAAQ,EAC7BD,EAAO,kBAAC,aAAD,MACEF,EAAWG,QAAQ,WAAQ,EACpCD,EAAO,kBAAC,UAAD,MACEF,EAAWG,QAAQ,WAAQ,EACpCD,EAAO,kBAAC,YAAD,MACEF,EAAWG,QAAQ,WAAQ,EACpCD,EAAO,kBAAC,cAAD,MACEF,EAAWG,QAAQ,WAAQ,IACpCD,EAAO,kBAAC,SAAD,OAGFA,I,+BAGC,IAAD,SACoBE,KAAKjB,MAAxBC,EADD,EACCA,KAAMC,EADP,EACOA,SAIRgB,EAAcjB,EAAKS,KAAI,SAACN,EAAKe,GAAW,IACpCL,EAAwCV,EAAxCU,KAAMH,EAAkCP,EAAlCO,SAAUC,EAAwBR,EAAxBQ,QAASC,EAAeT,EAAfS,WACjC,OACE,yBAAKO,UAAU,sBAAsBxB,IAAKuB,GACxC,2BAAIjB,EAASK,OAAOO,EAAO,KAC1B,EAAKO,eAAeR,GACrB,2BAAIF,EAAW,YAASC,EAAU,cAKxC,OACE,uBAAMU,UAAU,EAAOF,UAAU,eAAeG,UAfhC,CAChBC,QAAS,KAc6DC,WAAS,GAC7E,yBAAKL,UAAU,gBACb,yBAAKA,UAAU,yBACb,4BAAKM,MAASC,OAAO,SACrB,uBAAGP,UAAU,cAAcM,MAASC,OAAO,iBAA3C,iBAEF,yBAAKP,UAAU,gBACb,4BAAKnB,EAAK,GAAKA,EAAK,GAAGU,SAAW,YAASV,EAAK,GAAGW,QAAU,SAAM,MAGvE,yBAAKQ,UAAU,kBAAkBF,S,8BArEnBU,IAAMC,eA2Eb9B","file":"static/js/src-views-Dashboard-Weather.0da31be0.chunk.js","sourcesContent":["import io from '@utils/io';\n\nexport default function getWeather() {\n  return io.get('https://restapi.amap.com/v3/weather/weatherInfo', {\n    params: {\n      key: 'cc24ccab0a88c3ee17eb8dee0e07ba61',\n      city: 350200,\n      extensions: 'all'\n    }\n  });\n}\n","import React from 'react';\nimport { Card } from 'antd';\nimport getWeather from '@api/dashboard';\nimport Moment from 'moment';\nimport { RainSvg, CloudySvg, OvercastSvg, ThunderSvg, SunSvg } from '@components/SvgIcon';\n\ninterface StateData {\n  daypower: string;\n  daytemp: string;\n  dayweather: string;\n  week: number;\n}\n\ninterface WeatherState {\n  data: StateData[];\n  weekName: string[];\n}\n\nclass Weather extends React.PureComponent<{}, WeatherState> {\n  state: WeatherState = {\n    data: [],\n    weekName: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  };\n\n  componentDidMount() {\n    getWeather().then((res: any) => {\n      const { status, forecasts } = res;\n      if (Number(status) === 1) {\n        this.setState({\n          data: forecasts[0].casts.map((res: any) => {\n            const { daypower, daytemp, dayweather, week } = res;\n            return {\n              daypower,\n              daytemp,\n              dayweather,\n              week\n            };\n          })\n        });\n      }\n    });\n  }\n\n  getWeatherIcon(dayweather: string) {\n    let icon = null;\n    if (dayweather.indexOf('雷') >= 0) {\n      icon = <ThunderSvg />;\n    } else if (dayweather.indexOf('雨') >= 0) {\n      icon = <RainSvg />;\n    } else if (dayweather.indexOf('云') >= 0) {\n      icon = <CloudySvg />;\n    } else if (dayweather.indexOf('阴') >= 0) {\n      icon = <OvercastSvg />;\n    } else if (dayweather.indexOf('晴') >= 0) {\n      icon = <SunSvg />;\n    }\n\n    return icon;\n  }\n\n  render() {\n    const { data, weekName } = this.state;\n    const bodyStyle = {\n      padding: '0'\n    };\n    const WeatherItem = data.map((res, index) => {\n      const { week, daypower, daytemp, dayweather } = res;\n      return (\n        <div className=\"weakly-weather-item\" key={index}>\n          <p>{weekName[Number(week - 1)]}</p>\n          {this.getWeatherIcon(dayweather)}\n          <p>{daypower + '℃ - ' + daytemp + '℃'}</p>\n        </div>\n      );\n    });\n\n    return (\n      <Card bordered={false} className=\"weather-card\" bodyStyle={bodyStyle} hoverable>\n        <div className=\"weather-body\">\n          <div className=\"weather-date-location\">\n            <h2>{Moment().format('dddd')}</h2>\n            <p className=\"text-muted\">{Moment().format('DD MMMM, YYYY')} Amoy, China</p>\n          </div>\n          <div className=\"weather-data\">\n            <h1>{data[0] ? data[0].daypower + '℃ - ' + data[0].daytemp + '℃' : ''}</h1>\n          </div>\n        </div>\n        <div className=\"weakly-weather\">{WeatherItem}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Weather;\n"],"sourceRoot":""}