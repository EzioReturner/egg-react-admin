{"version":3,"sources":["webpack:///./src/views/Form/StepForm/Step3.tsx","webpack:///./src/views/Form/StepForm/form.module.less","webpack:///./src/views/Form/StepForm/formStore.ts"],"names":["Step3","initStep","StepFormStore","className","styles","step","type","title","id","defaultMessage","subtitle","buttonGroup","onClick","style","marginLeft","module","exports","configure","enforceActions","formStore","steps","getStepChild","current","component","this","React","lazy","submitting","values","data","observable","detail","user","action","setTimeout","nextStep"],"mappings":"qeAgCeA,UAzBS,WAAO,IACrBC,EAAaC,UAAbD,SACR,OACE,yBAAKE,UAAWC,IAAOC,MACrB,kBAAC,UAAD,CACEC,KAAK,YACLC,MAAO,kBAAC,UAAD,CAAiBC,GAAG,iBAAiBC,eAAe,6BAC3DC,SAAU,kBAAC,UAAD,CAAiBF,GAAG,aAAaC,eAAe,0EAE5D,yBAAKN,UAAWC,IAAOO,aACrB,uBAAQL,KAAK,UAAUM,QAASX,GAC9B,kBAAC,UAAD,CAAiBO,GAAG,gBAAgBC,eAAe,8BAErD,uBACEI,MAAO,CACLC,WAAY,QAGd,kBAAC,UAAD,CAAiBN,GAAG,kBAAkBC,eAAe,kC,6DCxB/DM,EAAOC,QAAU,CAAC,gBAAgB,uBAAuB,aAAa,oBAAoB,MAAQ,eAAe,KAAO,cAAc,YAAc,qBAAqB,SAAW,oB,w7BCEpLC,YAAU,CAAEC,eAAgB,W,IAyEtBC,EAAY,I,kBAjDhB,aAAe,IAAD,Q,4FAAA,yFAFdC,WAEc,OAoBdC,aAAe,WACb,OAAO,EAAKD,MAAM,EAAKE,SAASC,WArBpB,4EACZC,KAAKJ,MAAQ,CACX,CACEZ,GAAI,kBACJD,MAAO,2BACPgB,UAAWE,IAAMC,MAAK,kBAAM,mGAE9B,CACElB,GAAI,kBACJD,MAAO,2BACPgB,UAAWE,IAAMC,MAAK,kBAAM,mGAE9B,CACElB,GAAI,kBACJD,MAAO,eACPgB,UAAWE,IAAMC,MAAK,kBAAM,oG,0DAchCF,KAAKF,UACLE,KAAKG,YAAa,I,+BAGHC,GACfJ,KAAKK,KAAOD,O,sDA3CbE,K,yEAA6B,K,8BAC7BA,K,yEAAiC,K,wBACjCA,K,wEAA4B,CAC3BvB,MAAO,GACPwB,OAAQ,GACRC,KAAM,O,4BA4BPC,K,oFAAkB,WACjB,EAAKX,QAAU,M,0BAGhBW,K,+FAKAA,K,+FAIAA,K,oFAAgB,WACf,EAAKX,c,4BAGNW,K,oFAAkB,WACjB,EAAKN,YAAa,EAClBO,YAAW,WACT,EAAKC,aACJ,S,GAMQhB","file":"static/js/src-views-Form-StepForm-Step3.fdb013a8.chunk.js","sourcesContent":["import React from 'react';\nimport Result from '@components/Result';\nimport { Button } from 'antd';\nimport FormatterLocale from '@components/FormatterLocale';\nimport StepFormStore from './formStore';\nimport styles from './form.module.less';\n\nconst Step3: React.FC = () => {\n  const { initStep } = StepFormStore;\n  return (\n    <div className={styles.step}>\n      <Result\n        type=\"successed\"\n        title={<FormatterLocale id=\"action.success\" defaultMessage=\"操作成功\" />}\n        subtitle={<FormatterLocale id=\"step3.soon\" defaultMessage=\"已收到消息，将尽快处理~\" />}\n      />\n      <div className={styles.buttonGroup}>\n        <Button type=\"primary\" onClick={initStep}>\n          <FormatterLocale id=\"step3.oneMore\" defaultMessage=\"再来一单\" />\n        </Button>\n        <Button\n          style={{\n            marginLeft: '8px'\n          }}\n        >\n          <FormatterLocale id=\"step3.checkList\" defaultMessage=\"查看记录\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Step3;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-overflow\":\"text-overflow--1dHYe\",\"close-Icon\":\"close-Icon--NAWW_\",\"steps\":\"steps--1bF28\",\"step\":\"step--3rlAq\",\"buttonGroup\":\"buttonGroup--3H94a\",\"descript\":\"descript--3mBgT\"};","import { observable, configure, action } from 'mobx';\nimport React from 'react';\n\nconfigure({ enforceActions: 'always' });\n\ninterface StepObj {\n  id: string;\n  title: string;\n  component: any;\n}\n\ninterface StepData {\n  title: string;\n  detail: string;\n  user: string;\n}\n\nclass FormStore {\n  @observable current: number = 0;\n  @observable submitting: boolean = false;\n  @observable data: StepData = {\n    title: '',\n    detail: '',\n    user: ''\n  };\n  steps: Array<StepObj>;\n\n  constructor() {\n    this.steps = [\n      {\n        id: 'form.stepTitle1',\n        title: '填写信息',\n        component: React.lazy(() => import(/* webpackChunkName: \"Step1\" */ './Step1'))\n      },\n      {\n        id: 'form.stepTitle2',\n        title: '确认报告',\n        component: React.lazy(() => import(/* webpackChunkName: \"Step2\" */ './Step2'))\n      },\n      {\n        id: 'form.stepTitle3',\n        title: '完成',\n        component: React.lazy(() => import(/* webpackChunkName: \"Step3\" */ './Step3'))\n      }\n    ];\n  }\n\n  getStepChild = (): any => {\n    return this.steps[this.current].component;\n  };\n\n  @action initStep = (): void => {\n    this.current = 0;\n  };\n\n  @action nextStep(): void {\n    this.current++;\n    this.submitting = false;\n  }\n\n  @action setValue(values: StepData): void {\n    this.data = values;\n  }\n\n  @action onPrev = (): void => {\n    this.current--;\n  };\n\n  @action onSubmit = (): void => {\n    this.submitting = true;\n    setTimeout(() => {\n      this.nextStep();\n    }, 1000);\n  };\n}\n\nconst formStore = new FormStore();\n\nexport default formStore;\n"],"sourceRoot":""}