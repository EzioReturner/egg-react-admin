{"version":3,"sources":["webpack:///./src/api/list.js","webpack:///./src/api/platform.js","webpack:///./src/views/List/BasicList/ListTable.tsx","webpack:///./src/views/List/BasicList/index.tsx","webpack:///./src/views/List/BasicList/listTable.module.less"],"names":["listData","Mock","mock","id","detail","title","handler","date","progress","tableData","no","domain","num","status","getListData","io","get","getTableData","randomNumber","min","max","Math","floor","random","projectList","name","time","getProjectList","getContact","Search","RadioButton","Button","RadioGroup","Group","ListTable","state","list","handleSearch","handleChange","this","initData","results","_data","data","map","res","index","avatar","picture","thumbnail","setState","Extra","onChange","defaultValue","value","placeholder","onSearch","style","width","marginLeft","ListContent","className","styles","content","pText","handleTime","showInfo","percent","bordered","marginTop","extra","rowKey","loading","length","dataSource","renderItem","item","Item","actions","key","type","Meta","src","shape","size","description","React","Component","inject","observer","props","isMobile","layoutStore","layoutStatus","gutter","col","xl","sm","xs","colTitle","colNum","textAlign","module","exports"],"mappings":"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","file":"static/js/src-views-List-BasicList.f6500191.chunk.js","sourcesContent":["import io from '@utils/io';\nimport Mock from 'mockjs';\n\nconst listData = Mock.mock({\n  'data|6-10': [\n    {\n      id: '@id',\n      detail: '@paragraph(1)',\n      title: '@name',\n      handler: '@cname',\n      date: '@date(yyyy-MM-dd HH:mm:ss)',\n      progress: '@natural(1,100)'\n    }\n  ]\n});\n\nMock.mock('/get/listData', listData);\n\nconst tableData = Mock.mock({\n  'data|30-60': [\n    {\n      'key|+1': 1,\n      no: '@string(10)',\n      domain: '@domain',\n      num: '@natural(1,100)',\n      status: '@natural(0,3)',\n      date: '@date(yyyy-MM-dd HH:mm:ss)'\n    }\n  ]\n});\n\nMock.mock('/get/tableData', tableData);\n\nexport function getListData() {\n  return io.get('/get/listData');\n}\n\nexport function getTableData() {\n  return io.get('/get/tableData');\n}\n","import io from '@utils/io';\nimport Mock from 'mockjs';\n\nexport function randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst projectList = Mock.mock({\n  'data|6-6': [\n    {\n      name: '@first',\n      detail: '@paragraph(1)',\n      domain: '@domain',\n      time: '@boolean'\n    }\n  ]\n});\n\nMock.mock('/get/projectList', projectList);\n\nexport function getProjectList() {\n  return io.get('/get/projectList');\n}\n\nexport function getContact(num = 15) {\n  return io.get(`https://randomuser.me/api/?inc=picture,name&results=${num}`);\n}\n","import React from 'react';\nimport { Card, Input, Radio, List, Avatar, Progress, Button } from 'antd';\nimport { getListData } from '@api/list';\nimport { getContact } from '@api/platform';\nimport styles from './listTable.module.less';\n\nconst Search = Input.Search;\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\ninterface ListState {\n  date: string;\n  id: string;\n  avatar?: string;\n  progress: number;\n  handler: string;\n  detail: string;\n  title?: string;\n}\n\ninterface ListTableState {\n  list: ListState[];\n}\n\nclass ListTable extends React.Component<{}, ListTableState> {\n  state = {\n    list: []\n  };\n\n  componentDidMount() {\n    this.initData();\n  }\n\n  async initData() {\n    const { results } = await getContact();\n    let { data: _data } = await getListData();\n\n    _data = _data.map((res: ListState, index: number) => {\n      return {\n        ...res,\n        avatar: results[index].picture.thumbnail\n      };\n    });\n    this.setState({\n      list: _data\n    });\n  }\n\n  handleSearch = () => {\n    // console.log(value);\n  };\n\n  handleChange = () => {\n    // console.log(`radio checked:${e.target.value}`);\n  };\n\n  render() {\n    const { list } = this.state;\n    const Extra = (\n      <div>\n        <RadioGroup onChange={this.handleChange} defaultValue=\"a\">\n          <RadioButton value=\"a\">全部</RadioButton>\n          <RadioButton value=\"b\">处理中</RadioButton>\n          <RadioButton value=\"c\">完毕</RadioButton>\n        </RadioGroup>\n        <Search\n          placeholder=\"搜索\"\n          onSearch={this.handleSearch}\n          style={{ width: 200, marginLeft: '8px' }}\n        />\n      </div>\n    );\n\n    const ListContent = ({ data: { handler, date, progress } }: { data: any }) => (\n      <div className={styles.content}>\n        <div>\n          <span>经办人</span>\n          <p className={styles.pText}>{handler}</p>\n        </div>\n        <div className={styles.handleTime}>\n          <span>处理时间</span>\n          <p className={styles.pText}>{date}</p>\n        </div>\n        <Progress\n          showInfo={false}\n          percent={progress}\n          className={`${styles.progress} ${progress < 40 ? 'warning' : 'success'}`}\n        />\n        <span>{progress}%</span>\n      </div>\n    );\n\n    return (\n      <Card\n        bordered={false}\n        style={{ marginTop: '24px' }}\n        className=\"fat-card\"\n        extra={Extra}\n        title=\"标准列表\"\n      >\n        <List\n          rowKey=\"id\"\n          loading={!list.length}\n          dataSource={list}\n          renderItem={(item: ListState) => (\n            <List.Item\n              actions={[\n                <Button key=\"first\" type=\"link\">\n                  编辑\n                </Button>,\n                <Button key=\"second\" type=\"link\">\n                  更多操作\n                </Button>\n              ]}\n            >\n              <List.Item.Meta\n                avatar={<Avatar src={item.avatar} shape=\"square\" size=\"large\" />}\n                title={<Button type=\"link\">{item.title}</Button>}\n                description={<div className={styles.detail}>{item.detail}</div>}\n              />\n              <ListContent data={item} />\n            </List.Item>\n          )}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default ListTable;\n","import React from 'react';\nimport { Row, Col, Card } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport PageWrapper from '@components/PageWrapper';\nimport FormatterLocale from '@components/FormatterLocale';\nimport ListTable from './ListTable';\nimport styles from './listTable.module.less';\nimport LayoutStore from '@store/layoutStore';\n\ninterface BasicInjected {\n  layoutStore: LayoutStore;\n}\n\nconst BasicList: React.FC<BasicInjected> = props => {\n  const list = [\n    {\n      title: '代办事项',\n      num: '8个事项'\n    },\n    {\n      title: '事项平均处理时间',\n      num: '32分钟'\n    },\n    {\n      title: '平均每周处理事项',\n      num: '11个事项'\n    }\n  ];\n  const RowInfo = () => (\n    <Row gutter={24}>\n      {list.map(col => {\n        return (\n          <Col xl={8} sm={24} xs={24} key={col.title}>\n            <Card bordered={false}>\n              <p className={styles.colTitle}>{col.title}</p>\n              <span className={styles.colNum}>{col.num}</span>\n            </Card>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n\n  const DontShow = () => (\n    <Card style={{ marginTop: '24px' }} bordered={false}>\n      <div style={{ textAlign: 'center' }}>不给你看</div>\n    </Card>\n  );\n\n  const {\n    layoutStatus: { isMobile }\n  } = props.layoutStore;\n  return (\n    <PageWrapper title={<FormatterLocale id=\"basicList.title\" />}>\n      <RowInfo />\n      {isMobile ? <DontShow /> : <ListTable />}\n    </PageWrapper>\n  );\n};\n\nexport default inject('layoutStore')(observer(BasicList));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-overflow\":\"text-overflow--28eg6\",\"close-Icon\":\"close-Icon--3KZVP\",\"colTitle\":\"colTitle--2r9ge\",\"colNum\":\"colNum--1fCCY\",\"detail\":\"detail--1kBNM\",\"content\":\"content--2XhKV\",\"pText\":\"pText--1_OFZ\",\"handleTime\":\"handleTime--prRm0\",\"progress\":\"progress--IhFg7\"};"],"sourceRoot":""}