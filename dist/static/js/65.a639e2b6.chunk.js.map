{"version":3,"sources":["utlis/echartTools.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ET","displayChart","Map","data","id","option","otherOption","myChart","this","getInstance","undefined","echarts","init","document","getElementById","setOption","addResize","cacheDisplayChart","getInstanceByDom","name","registerMap","_windowResizeEvent","debounce","resize","window","addEventListener","set","_this","ids","Object","F_project_RATurbo_react_admin_1_0_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","keys","setTimeout","forEach","removeDisplayChart","removeResize","dispose","has","delete","removeEventListener","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__"],"mappings":"0JAwEMA,EAAK,qDApETC,aAAe,IAAIC,0DAETC,GACR,GAAKA,GAASA,EAAKC,IAAOD,EAAKE,OAA/B,CADc,IAEND,EAA4BD,EAA5BC,GAAIC,EAAwBF,EAAxBE,OAAQC,EAAgBH,EAAhBG,YAChBC,EAAUC,KAAKC,YAAYL,GAW/B,YATgBM,IAAZH,IACFA,EAAUI,IAAQC,KAAKC,SAASC,eAAeV,KAEjDG,EAAQQ,UAAUV,GAElBG,KAAKQ,UAAUT,GACfC,KAAKS,kBAAkBb,GACvBE,GAAeC,EAAQQ,UAAUT,GAE1BC,uCAGGH,GACV,OAAOO,IAAQO,iBAAiBL,SAASC,eAAeV,wCAG9Ce,EAAMhB,GAChBQ,IAAQS,YAAYD,EAAMhB,qCAIlBI,GACRA,EAAQc,mBAAqB,WAC3BC,kBAASf,EAAQgB,WAEnBC,OAAOC,iBAAiB,SAAUlB,EAAQc,8DAI1BjB,GAChBI,KAAKP,aAAayB,IAAItB,EAAI,oDAIJ,IAAAuB,EAAAnB,KAChBoB,EAAGC,OAAAC,EAAA,EAAAD,CAAOrB,KAAKP,aAAa8B,QAClCC,WAAW,WACTJ,EAAIK,QAAQ,SAAA7B,GACKuB,EAAKlB,YAAYL,GACzBiB,wBAER,qCAIGjB,GACNI,KAAK0B,mBAAmB9B,GACxBI,KAAK2B,aAAa/B,GAClBO,IAAQyB,QAAQ5B,KAAKC,YAAYL,+CAGhBA,GACjBI,KAAKP,aAAaoC,IAAIjC,IAAOI,KAAKP,aAAaqC,OAAOlC,wCAG3CA,GACX,IAAMG,EAAUC,KAAKC,YAAYL,GACjCoB,OAAOe,oBAAoB,SAAUhC,EAAQc,8BAMlCrB,8CCvEA,SAAAwC,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSE,CAAiBN,IEJX,SAAAO,GACf,GAAAC,OAAAC,YAAArB,OAAAmB,IAAA,uBAAAnB,OAAAsB,UAAAC,SAAAC,KAAAL,GAAA,OAAAN,MAAAY,KAAAN,GFGmCO,CAAed,IGJnC,WACf,UAAAe,UAAA,mDHG2DC,GAJ3DC,EAAAC,EAAAC,EAAA,sBAAApB","file":"static/js/65.a639e2b6.chunk.js","sourcesContent":["import echarts from 'echarts';\nimport debounce from './debounce';\n\nclass EchartsTool {\n  displayChart = new Map();\n\n  initChart(data) {\n    if (!data || !data.id || !data.option) return;\n    const { id, option, otherOption } = data;\n    let myChart = this.getInstance(id);\n\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    myChart.setOption(option);\n\n    this.addResize(myChart);\n    this.cacheDisplayChart(id);\n    otherOption && myChart.setOption(otherOption);\n\n    return myChart;\n  }\n\n  getInstance(id) {\n    return echarts.getInstanceByDom(document.getElementById(id));\n  }\n\n  registerMap(name, data) {\n    echarts.registerMap(name, data);\n  }\n\n  // 添加视窗size响应\n  addResize(myChart) {\n    myChart._windowResizeEvent = () => {\n      debounce(myChart.resize());\n    };\n    window.addEventListener('resize', myChart._windowResizeEvent);\n  }\n\n  // 缓存chart\n  cacheDisplayChart(id) {\n    this.displayChart.set(id, '');\n  }\n\n  //触发图表resize\n  resizeAllDisplayChart() {\n    const ids = [...this.displayChart.keys()];\n    setTimeout(() => {\n      ids.forEach(id => {\n        const _chart = this.getInstance(id);\n        _chart._windowResizeEvent();\n      });\n    }, 700);\n  }\n\n  // 解除chart\n  dispose(id) {\n    this.removeDisplayChart(id);\n    this.removeResize(id);\n    echarts.dispose(this.getInstance(id));\n  }\n\n  removeDisplayChart(id) {\n    this.displayChart.has(id) && this.displayChart.delete(id);\n  }\n\n  removeResize(id) {\n    const myChart = this.getInstance(id);\n    window.removeEventListener('resize', myChart._windowResizeEvent);\n  }\n}\n\nconst ET = new EchartsTool();\n\nexport default ET;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}