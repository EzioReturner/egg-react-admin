{"version":3,"sources":["config/setting.js","views/User/LoginForm.jsx"],"names":["module","exports","siteName","copyright","menuLinkUrl","logoPath","fixedHeader","i18n","languages","key","title","icon","defaultLanguage","theme","@primary-color","@link-color","@border-radius-base","@font-size-base","LoginForm","inject","withRouter","state","loading","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","setState","_this$props$form$getF","getFieldsValue","userName","password","Promise","setTimeout","userStore","handleUserLogin","then","res","handleSuccess","handleError","this","history","push","getFieldDecorator","react__WEBPACK_IMPORTED_MODULE_15___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_15__","className","Fragment","antd_es_form__WEBPACK_IMPORTED_MODULE_5__","onSubmit","Item","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_7__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_9__","type","placeholder","autoComplete","valuePropName","initialValue","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_3__","href","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","htmlType","Component"],"mappings":"mFACAA,EAAOC,QAAU,CACfC,SAAU,WACVC,UAAW,CAAC,iBAAkB,yBAA0B,mCACxDC,YAAa,sDACbC,SAAU,YACVC,aAAa,EACbC,KAAM,CACJC,UAAW,CAAC,CACRC,IAAK,KACLC,MAAO,2BACPC,KAAM,4BAER,CACEF,IAAK,KACLC,MAAO,UACPC,KAAM,4BAER,CACEF,IAAK,KACLC,MAAO,qBACPC,KAAM,6BAGVC,gBAAiB,MAEnBC,MAAO,CACLC,iBAAkB,UAClBC,cAAe,UACfC,sBAAuB,MACvBC,kBAAmB,mOCpBjBC,mBADLC,YAAO,aADPC,6NAGCC,MAAQ,CACNC,SAAS,KAcXC,aAAe,SAAAC,GACbA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAe,SAAAC,GAC7B,IAAKA,EAAK,CACRJ,EAAKK,SAAS,CACZT,SAAS,IAFH,IAAAU,EAIuBN,EAAKC,MAAMC,KAAKK,eAAe,CAC5D,WACA,aAFMC,EAJAF,EAIAE,SAAUC,EAJVH,EAIUG,SAIlB,OAAO,IAAIC,QAAQ,WACjBC,WAAW,WACTX,EAAKC,MAAMW,UACRC,gBAAgBL,EAAUC,GAC1BK,KAAK,SAAAC,GACAA,EACFf,EAAKgB,gBAELhB,EAAKiB,iBAGV,wFAhCTC,KAAKb,SAAS,CACZT,SAAS,IAEXsB,KAAKjB,MAAMgB,sDAIXC,KAAKjB,MAAMkB,QAAQC,KAAK,+CA+BjB,IACCC,EAAsBH,KAAKjB,MAAMC,KAAjCmB,kBACAzB,EAAYsB,KAAKvB,MAAjBC,QACR,OACE0B,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEE,aAAblD,WAA0B8C,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,SAAiBL,EAAAC,EAAAC,cAAA,iBAAjB,UAAyDhD,YAGvF8C,EAAAC,EAAAC,cAAAI,EAAA,GAAMC,SAAUX,KAAKrB,aAAc6B,UAAU,cAC3CJ,EAAAC,EAAAC,cAAAI,EAAA,EAAME,KAAN,KACGT,EAAkB,WAAY,CAC7BU,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iCAF9BZ,CAKCC,EAAAC,EAAAC,cAAAU,EAAA,GACEC,OAAQb,EAAAC,EAAAC,cAAAY,EAAA,GAAMC,KAAK,SACnBC,YAAY,0BACZC,aAAa,UAInBjB,EAAAC,EAAAC,cAAAI,EAAA,EAAME,KAAN,KACGT,EAAkB,WAAY,CAC7BU,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iCAF9BZ,CAKCC,EAAAC,EAAAC,cAAAU,EAAA,GACEC,OAAQb,EAAAC,EAAAC,cAAAY,EAAA,GAAMC,KAAK,SACnBA,KAAK,WACLC,YAAY,gBACZC,aAAa,UAInBjB,EAAAC,EAAAC,cAAAI,EAAA,EAAME,KAAN,KACGT,EAAkB,WAAY,CAC7BmB,cAAe,UACfC,cAAc,GAFfpB,CAGEC,EAAAC,EAAAC,cAAAkB,EAAA,uBACHpB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoBiB,KAAK,UAAtC,mBACArB,EAAAC,EAAAC,cAAAoB,EAAA,GACEP,KAAK,UACLQ,SAAS,SACTnB,UAAU,oBACV9B,QAASA,GAET0B,EAAAC,EAAAC,cAAA,uBAZJ,MAcKF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,UAAR,2BAhGSG,sBAwGTtD","file":"static/js/60.66f72658.chunk.js","sourcesContent":["// @ts-ignore\nmodule.exports = {\n  siteName: 'RA-Turbo',\n  copyright: ['RA-Turbo admin', 'ezioreturner@gmail.com', 'https://github.com/EzioReturner'],\n  menuLinkUrl: 'https://github.com/EzioReturner/RATurbo-react-admin',\n  logoPath: '/logo.png',\n  fixedHeader: true,\n  i18n: {\n    languages: [{\n        key: 'zh',\n        title: 'ç®€ä½“ä¸­æ–‡',\n        icon: 'ðŸ‡¨ðŸ‡³'\n      },\n      {\n        key: 'en',\n        title: 'English',\n        icon: 'ðŸ‡¬ðŸ‡§'\n      },\n      {\n        key: 'ja',\n        title: 'æ—¥æœ¬è¯­',\n        icon: 'ðŸ‡¯ðŸ‡µ'\n      }\n    ],\n    defaultLanguage: 'zh'\n  },\n  theme: {\n    '@primary-color': '#fb4491',\n    '@link-color': '#fb4491',\n    '@border-radius-base': '2px',\n    '@font-size-base': '13px'\n  },\n}","import React, { Component, Fragment } from 'react';\nimport { Form, Button, Input, Icon, Checkbox } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { siteName } from 'config/setting';\nimport { inject } from 'mobx-react';\nimport './login.scss';\nimport 'animate.css';\n\n@withRouter\n@inject('userStore')\nclass LoginForm extends Component {\n  state = {\n    loading: false\n  };\n\n  handleError() {\n    this.setState({\n      loading: false\n    });\n    this.props.handleError();\n  }\n\n  handleSuccess() {\n    this.props.history.push('/dashboard');\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields(err => {\n      if (!err) {\n        this.setState({\n          loading: true\n        });\n        const { userName, password } = this.props.form.getFieldsValue([\n          'userName',\n          'password'\n        ]);\n        return new Promise(() => {\n          setTimeout(() => {\n            this.props.userStore\n              .handleUserLogin(userName, password)\n              .then(res => {\n                if (res) {\n                  this.handleSuccess();\n                } else {\n                  this.handleError();\n                }\n              });\n          }, 800);\n        });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { loading } = this.state;\n    return (\n      <Fragment>\n        <div className=\"loginTitle\">\n          {\n            siteName === 'RA-Turbo' ? <React.Fragment>R<span>A</span>-TORBO</React.Fragment> : siteName\n          }\n        </div>\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('userName', {\n              rules: [\n                { required: true, message: 'Please input your username!' }\n              ]\n            })(\n              <Input\n                prefix={<Icon type=\"user\" />}\n                placeholder=\"Username: admin | guest\"\n                autoComplete=\"off\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, message: 'Please input your Password!' }\n              ]\n            })(\n              <Input\n                prefix={<Icon type=\"lock\" />}\n                type=\"password\"\n                placeholder=\"Password: 123\"\n                autoComplete=\"off\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            <a className=\"login-form-forgot\" href=\"/login\">Forgot password</a>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              loading={loading}\n            >\n              <span>Log in</span>\n            </Button>\n            Or <a href=\"/login\">register now!</a>\n          </Form.Item>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nexport default LoginForm;"],"sourceRoot":""}