{"version":3,"sources":["webpack:///./src/components/Authorized/IdentifyUser.tsx"],"names":["inject","observer","props","history","useHistory","userStore","identifyStatus","getAuthority","setAuthority","useEffect","au","push","spinning","style","background","text"],"mappings":"sIAAA,qNAuCeA,sBAAO,YAAPA,CAAoBC,aA9BJ,SAAAC,GAC7B,IAAMC,EAAUC,cADsB,EAKlCF,EADFG,UAAaC,EAJuB,EAIvBA,eAAgBC,EAJO,EAIPA,aAAcC,EAJP,EAIOA,aAmB7C,OAhBAC,qBAAU,WACR,IAAMC,EAAKH,IACXC,EAAaE,KACZ,CAACH,EAAcC,IAElBC,qBAAU,WACe,gBAAnBH,IAGmB,iBAAnBA,EACFH,EAAQQ,KAAK,KACe,iBAAnBL,GACTH,EAAQQ,KAAK,kBAEd,CAACR,EAASG,IAGX,iCACE,kBAAC,UAAD,CAASM,UAAQ,EAACC,MAAO,CAAEC,WAAY,QAAUC,KAAK","file":"static/js/src-components-Authorized-IdentifyUser.188fd860.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport Loading from '@components/Loading';\nimport { observer, inject } from 'mobx-react';\nimport UserStore from '@store/userStore';\nimport { useHistory } from 'react-router-dom';\ninterface IdentifyUserProps {\n  userStore: UserStore;\n}\n\nconst IdentifyUser: React.FC = props => {\n  const history = useHistory();\n\n  const {\n    userStore: { identifyStatus, getAuthority, setAuthority }\n  } = props as IdentifyUserProps;\n\n  useEffect(() => {\n    const au = getAuthority();\n    setAuthority(au);\n  }, [getAuthority, setAuthority]);\n\n  useEffect(() => {\n    if (identifyStatus === 'identifying') {\n      return;\n    }\n    if (identifyStatus === 'identifyPass') {\n      history.push('/');\n    } else if (identifyStatus === 'unauthorized') {\n      history.push('/user/login');\n    }\n  }, [history, identifyStatus]);\n\n  return (\n    <section>\n      <Loading spinning style={{ background: '#fff' }} text=\"identifying\" />\n    </section>\n  );\n};\n\nexport default inject('userStore')(observer(IdentifyUser));\n"],"sourceRoot":""}