{"version":3,"sources":["webpack:///./src/api/platform.js","webpack:///./src/assets/image/userPhoto.jpg","webpack:///./src/views/Program/Platform/MultiAnalysis.tsx","webpack:///./src/views/Program/Platform/PlatformProject.tsx","webpack:///./src/views/Program/Platform/QuickStart.tsx","webpack:///./src/views/Program/Platform/TeamCard.tsx","webpack:///./src/views/Program/Platform/index.tsx"],"names":["randomNumber","min","max","Math","floor","random","projectList","Mock","mock","name","detail","domain","time","getProjectList","io","get","getContact","num","MultiAnalysis","className","hoverable","bordered","title","id","option","multiAnalysisOption","PlatformProject","state","then","res","setState","data","this","bodyStyle","padding","map","index","key","PureComponent","QuickStart","contact","results","loading","length","xl","lg","md","sm","xs","src","picture","thumbnail","first","type","size","icon","TeamCard","style","width","inject","observer","props","userInfo","userStore","content","alt","require","default","extraContent","gutter","marginTop"],"mappings":"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","file":"static/js/src-views-Program-Platform.810bb687.chunk.js","sourcesContent":["import io from '@utils/io';\nimport Mock from 'mockjs';\n\nexport function randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst projectList = Mock.mock({\n  'data|6-6': [\n    {\n      name: '@first',\n      detail: '@paragraph(1)',\n      domain: '@domain',\n      time: '@boolean'\n    }\n  ]\n});\n\nMock.mock('/get/projectList', projectList);\n\nexport function getProjectList() {\n  return io.get('/get/projectList');\n}\n\nexport function getContact(num = 15) {\n  return io.get(`https://randomuser.me/api/?inc=picture,name&results=${num}`);\n}\n","export default __webpack_public_path__ + \"static/img/userPhoto.d5c9292d.jpg\";","import React from 'react';\nimport { Card } from 'antd';\nimport { multiAnalysisOption } from '@assets/chartOption';\nimport EchartsReact from '@components/Echarts';\nimport FormatterLocale from '@components/FormatterLocale';\n\nconst MultiAnalysis = () => {\n  return (\n    <Card\n      className=\"fat-card\"\n      hoverable\n      bordered={false}\n      title={<FormatterLocale id=\"platform.MutliAnalysis\" />}\n    >\n      <EchartsReact option={multiAnalysisOption} />\n    </Card>\n  );\n};\n\nexport default MultiAnalysis;\n","import React, { PureComponent } from 'react';\nimport { Card } from 'antd';\nimport { getProjectList } from '@api/platform';\nimport FormatterLocale from '@components/FormatterLocale';\n\nclass PlatformProject extends PureComponent {\n  state = {\n    projectList: []\n  };\n\n  randomNumber(min = 2, max = 5) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  componentDidMount() {\n    getProjectList().then((res: any) => {\n      this.setState({\n        projectList: res.data\n      });\n    });\n  }\n\n  render() {\n    const { projectList } = this.state;\n    return (\n      <Card\n        title={<FormatterLocale id=\"platform.projectList\" />}\n        className=\"fat-card\"\n        bordered={false}\n        hoverable\n        bodyStyle={{\n          padding: '14px'\n        }}\n      >\n        <div className=\"project-list\">\n          {projectList.map(({ name, detail, domain, time }, index) => {\n            return (\n              <div key={index} className=\"projectInfo\">\n                <div className=\"top\">\n                  <p className={time ? 'triangle' : 'rect'}>{name}</p>\n                  <span>{detail}</span>\n                </div>\n                <div className=\"bottom\">\n                  <span className=\"domain\">{domain}</span>\n                  <span className=\"time\">\n                    {`${this.randomNumber()} ${time ? 'years' : 'day'} ago`}\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default PlatformProject;\n","import React, { PureComponent } from 'react';\nimport { Card, Button, Avatar, Row, Col } from 'antd';\nimport { getContact } from '@api/platform';\nimport FormatterLocale from '@components/FormatterLocale';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass QuickStart extends PureComponent {\n  state = {\n    contact: []\n  };\n\n  componentDidMount() {\n    getContact().then((res: any) => {\n      this.setState({\n        contact: res.results\n      });\n    });\n  }\n\n  render() {\n    const { contact } = this.state;\n    return (\n      <Card\n        title={<FormatterLocale id=\"platform.quickContact\" />}\n        bordered={false}\n        hoverable\n        loading={!contact.length}\n      >\n        <Row className=\"quick-start\">\n          {contact.map((res: any, index: number) => {\n            return (\n              <Col className=\"ac\" key={index} xl={2} lg={4} md={4} sm={4} xs={6}>\n                <Avatar src={res.picture.thumbnail} />\n                <p>{res.name.first}</p>\n              </Col>\n            );\n          })}\n          <Col className=\"ac\" xl={2} lg={4} md={4} sm={4} xs={6}>\n            <Button type=\"primary\" size=\"small\" icon={<PlusOutlined />}>\n              add\n            </Button>\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n}\n\nexport default QuickStart;\n","import React, { PureComponent } from 'react';\nimport { Card } from 'antd';\nimport FormatterLocale from '@components/FormatterLocale';\n\nclass TeamCard extends PureComponent {\n  render() {\n    const data = ['amoy avenger', 'soul tango', 'we are Groot'];\n    return (\n      <Card\n        title={<FormatterLocale id=\"platform.teamCard\" />}\n        style={{ width: '100%' }}\n        hoverable\n        bordered={false}\n      >\n        <div className=\"team-card\">\n          {data.map((res, index) => {\n            return (\n              <div className=\"team-card-detail\" key={index}>\n                <p>{res}</p>\n                <span>project:{Math.floor(Math.random() * -9 + 10)}</span>\n              </div>\n            );\n          })}\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default TeamCard;\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport PageWrapper from '@components/PageWrapper';\nimport FormatterLocale from '@components/FormatterLocale';\nimport PlatformProject from './PlatformProject';\nimport QuickStart from './QuickStart';\nimport MultiAnalysis from './MultiAnalysis';\nimport TeamCard from './TeamCard';\nimport UserStore from '@store/userStore';\nimport './platform.less';\n\ninterface MonitorInjected {\n  userStore: UserStore;\n}\n\nconst Monitor: React.FC = props => {\n  const injected = () => {\n    return props as MonitorInjected;\n  };\n\n  const {\n    userStore: { userInfo }\n  } = injected();\n\n  const content = (\n    <Col xl={16} lg={16} md={16} sm={24} xs={24}>\n      <div className=\"p-left-part\">\n        <img alt=\"\" src={require('@assets/image/userPhoto.jpg').default} className=\"user-photo\" />\n        <div>\n          <p>\n            <FormatterLocale id=\"platform.morning\" />, {userInfo.name},{' '}\n            <FormatterLocale id=\"platform.greating\" />\n          </p>\n          <span className=\"subText\">\n            <FormatterLocale id=\"platform.job\" /> | <FormatterLocale id=\"platform.department\" />\n          </span>\n        </div>\n      </div>\n    </Col>\n  );\n  const extraContent = (\n    <div className=\"p-right-part\">\n      <Row gutter={24}>\n        <Col xl={8} lg={8} md={8} sm={4} xs={8}>\n          <FormatterLocale id=\"platform.projects\" className=\"numTitle\" />\n          <p>23</p>\n        </Col>\n        <Col xl={8} lg={8} md={8} sm={4} xs={8}>\n          <FormatterLocale id=\"platform.rank\" className=\"numTitle\" />\n          <p>1/9</p>\n        </Col>\n        <Col xl={8} lg={8} md={8} sm={4} xs={8}>\n          <FormatterLocale id=\"platform.visitors\" className=\"numTitle\" />\n          <p>2333</p>\n        </Col>\n      </Row>\n    </div>\n  );\n  return (\n    <PageWrapper content={content} extraContent={extraContent}>\n      <div className=\"platform\">\n        <Row gutter={24}>\n          <Col xl={16} lg={24} md={24} sm={24} xs={24}>\n            <QuickStart />\n            <Row style={{ marginTop: '24px' }}>\n              <PlatformProject />\n            </Row>\n          </Col>\n          <Col xl={8} lg={24} md={24} sm={24} xs={24}>\n            <MultiAnalysis />\n            <Row style={{ marginTop: '24px' }}>\n              <TeamCard />\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </PageWrapper>\n  );\n};\n\nexport default inject('userStore')(observer(Monitor));\n"],"sourceRoot":""}