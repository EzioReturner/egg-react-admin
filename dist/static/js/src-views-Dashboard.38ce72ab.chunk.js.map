{"version":3,"sources":["webpack:///./src/api/dashboard.js","webpack:///./src/views/Dashboard/GlobalTrends.tsx","webpack:///./src/views/Dashboard/Performance.tsx","webpack:///./src/views/Dashboard/RowInfoCard.tsx","webpack:///./src/views/Dashboard/SaleTable.tsx","webpack:///./src/views/Dashboard/Weather.tsx","webpack:///./src/views/Dashboard/index.tsx"],"names":["getWeather","io","get","params","key","city","extensions","GlobalTrends","hoverable","bordered","className","bodyStyle","overflow","title","id","defaultMessage","style","height","width","option","globalTrendsOption","Performance","marginBottom","marginTop","color","percent","showInfo","status","RowInfoCard","details","icon","BoxSvg","tips","num","tipIcon","OrdersSvg","SalesSvg","EmpolyeesSvg","InfoCard","props","index","component","marginLeft","fontSize","gutter","map","dl","xl","lg","md","sm","xs","confirm","SaleTable","useState","name","amount","progress","tags","tableData","setTableData","showConfirm","type","record","content","onOk","Promise","resolve","setTimeout","handleInvite","handleDelete","catch","console","log","onCancel","splice","Number","_t","res","columns","dataIndex","render","text","minWidth","tag","length","toUpperCase","onClick","pagination","dataSource","Weather","state","data","weekName","then","forecasts","setState","casts","daypower","daytemp","dayweather","week","indexOf","this","WeatherItem","getWeatherIcon","padding","Moment","format","React","PureComponent","Dashboard","span"],"mappings":"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","file":"static/js/src-views-Dashboard.38ce72ab.chunk.js","sourcesContent":["import io from '@utils/io';\n\nexport default function getWeather() {\n  return io.get('https://restapi.amap.com/v3/weather/weatherInfo', {\n    params: {\n      key: 'cc24ccab0a88c3ee17eb8dee0e07ba61',\n      city: 350200,\n      extensions: 'all'\n    }\n  });\n}\n","import React from 'react';\nimport { Card } from 'antd';\nimport EchartsReact from '@components/Echarts';\nimport { globalTrendsOption } from '@assets/chartOption';\nimport FormatterLocale from '@components/FormatterLocale';\n\nconst GlobalTrends: React.FC = () => {\n  return (\n    <Card\n      hoverable\n      bordered={false}\n      className=\"fat-card global-trends\"\n      bodyStyle={{ overflow: 'hidden' }}\n      title={<FormatterLocale id=\"dashboard.trends\" defaultMessage=\"全球趋势\" />}\n    >\n      <EchartsReact style={{ height: '350px', width: '100%' }} option={globalTrendsOption} />\n    </Card>\n  );\n};\n\nexport default GlobalTrends;\n","import React from 'react';\nimport { Card, Progress } from 'antd';\nimport FormatterLocale from '@components/FormatterLocale';\n\nconst Performance = () => {\n  return (\n    <Card\n      bordered={false}\n      hoverable\n      className=\"performance-card fat-card\"\n      title={\n        <p className=\"headerTitle\">\n          {' '}\n          <FormatterLocale id=\"dashboard.perTitle\" defaultMessage=\"历史表现\" />\n        </p>\n      }\n    >\n      <div className=\"jus-b warp-flex\">\n        <div>\n          <p className=\"text-1 mb-2\">\n            <FormatterLocale id=\"dashboard.bestPerformance\" defaultMessage=\"最优表现\" />\n          </p>\n          <h3 className=\"text-3 mb-4\">+45.2%</h3>\n        </div>\n        <div>2018</div>\n      </div>\n      <div className=\"jus-b warp-flex\">\n        <div>\n          <p className=\"text-1 mb-2\">\n            <FormatterLocale id=\"dashboard.worstPerformance\" defaultMessage=\"最劣表现\" />\n          </p>\n          <h3 className=\"text-3 mb-4\">-35%</h3>\n        </div>\n        <div>2017</div>\n      </div>\n      <div\n        style={{\n          marginBottom: '-4px',\n          marginTop: '10px'\n        }}\n      >\n        <div className=\"jus-b warp-flex\">\n          <p className=\"mb-0\">\n            <FormatterLocale id=\"dashboard.sales\" defaultMessage=\"销售量\" />\n          </p>\n          <p\n            className=\"mb-0\"\n            style={{\n              color: '#308ee0'\n            }}\n          >\n            88%\n          </p>\n        </div>\n        <div>\n          <Progress percent={88} showInfo={false} status=\"active\" />\n        </div>\n      </div>\n      <div className=\"mt-4\">\n        <div className=\"jus-b warp-flex\">\n          <p className=\"mb-0\">\n            <FormatterLocale id=\"dashboard.visits\" defaultMessage=\"访问量\" />\n          </p>\n          <p\n            className=\"mb-0\"\n            style={{\n              color: '#00ce68'\n            }}\n          >\n            56%\n          </p>\n        </div>\n        <div>\n          <Progress showInfo={false} percent={56} status=\"active\" className=\"success\" />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default Performance;\n","import React from 'react';\nimport { Row, Col, Card } from 'antd';\nimport { BoxSvg, EmpolyeesSvg, OrdersSvg, SalesSvg } from '@components/SvgIcon';\nimport FormatterLocale from '@components/FormatterLocale';\nimport Icon, {\n  RedoOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  ShakeOutlined\n} from '@ant-design/icons';\ninterface InfoCardProps {\n  icon: any;\n  tips: string;\n  title: string;\n  num: string | number;\n  tipIcon: React.ReactNode;\n  index: string | number;\n}\n\nconst RowInfoCard: React.FC = () => {\n  const details = [\n    {\n      icon: BoxSvg,\n      tips: '65% lower growth',\n      title: 'Total Revenue',\n      num: '$65,650',\n      tipIcon: <ExclamationCircleOutlined className=\"mr-2\" />\n    },\n    {\n      icon: OrdersSvg,\n      tips: 'Product-wise sales',\n      title: 'Orders',\n      num: '3455',\n      tipIcon: <ShakeOutlined className=\"mr-2\" />\n    },\n    {\n      icon: SalesSvg,\n      tips: 'Weekly Sales',\n      title: 'Sales',\n      num: '5693',\n      tipIcon: <FundOutlined className=\"mr-2\" />\n    },\n    {\n      icon: EmpolyeesSvg,\n      tips: 'Product-wise sales',\n      title: 'Employees',\n      num: '246',\n      tipIcon: <RedoOutlined className=\"mr-2\" />\n    }\n  ];\n  const InfoCard = (props: InfoCardProps) => {\n    const { icon, tips, title, num, tipIcon, index } = props;\n    return (\n      <Card className=\"info-card fat-card\" bordered={false} hoverable>\n        <div className=\"top\">\n          <Icon style={{ marginTop: '12px' }} component={icon as any} />\n          <div className=\"right-part\">\n            <p className=\"title\">\n              {<FormatterLocale id={`dashboard.rowInfo${index}.title`} defaultMessage={title} />}\n            </p>\n            <h3 className=\"num\">{num}</h3>\n          </div>\n        </div>\n        <p className=\"tips\">\n          {tipIcon}\n          {\n            <FormatterLocale\n              style={{ marginLeft: '8px', fontSize: '13px' }}\n              id={`dashboard.rowInfo${index}.tips`}\n              defaultMessage={tips}\n            />\n          }\n        </p>\n      </Card>\n    );\n  };\n  return (\n    <Row gutter={24} className=\"rowInfo-card\">\n      {details.map((dl, index) => (\n        <Col xl={6} lg={12} md={12} sm={24} xs={24} key={index} style={{ marginBottom: '24px' }}>\n          <InfoCard {...dl} index={index} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default RowInfoCard;\n","import React, { useState } from 'react';\nimport { Card, Table, Divider, Tag, Progress, Modal, Button } from 'antd';\nimport FormatterLocale from '@components/FormatterLocale';\n\ninterface Record {\n  name: string;\n  key: string | number;\n  amount: string;\n  progress: number;\n  tags: string[];\n}\n\nconst confirm = Modal.confirm;\n\nconst SaleTable: React.FC = () => {\n  const initTableData: Record[] = [\n    {\n      key: '1',\n      name: 'John Brown',\n      amount: '$ 32.77',\n      progress: 60,\n      tags: ['nice', 'developer']\n    },\n    {\n      key: '2',\n      name: 'Jim Green',\n      amount: '$ 72.11',\n      progress: 82,\n      tags: ['loser', 'waiting']\n    },\n    {\n      key: '3',\n      name: 'Joe Black',\n      amount: '$ 56.21',\n      progress: 30,\n      tags: ['cool', 'teacher']\n    }\n  ];\n  const [tableData, setTableData] = useState(initTableData);\n\n  const showConfirm = ([type, record]: [string, any]) => {\n    const { name } = record;\n    const title = `Do you want to ${type} ${name}?`;\n    confirm({\n      title,\n      content: `clicked the OK button, to confirm ${type}d`,\n      onOk: () => {\n        return new Promise(resolve => {\n          // setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n          setTimeout(() => {\n            if (type === 'invite') {\n              handleInvite();\n            } else {\n              handleDelete(record);\n            }\n            resolve();\n          }, 2000);\n        }).catch(() => console.log('Oops errors!'));\n      },\n      onCancel() {}\n    });\n  };\n\n  const handleInvite = () => {};\n\n  const handleDelete = ({ key }: { key: number }) => {\n    tableData.splice(Number(key - 1), 1);\n    const _t = tableData.map((res, index) => {\n      return {\n        ...res,\n        key: index + 1\n      };\n    });\n    setTableData(_t);\n  };\n\n  const _renderTags = (tags: string[]) => (\n    <span>\n      {tags.map(tag => {\n        let color = tag.length > 5 ? 'processing' : 'success';\n        if (tag === 'loser') {\n          color = 'error';\n        }\n        if (tag === 'waiting') {\n          color = 'default';\n        }\n        return (\n          <Tag color={color} key={tag}>\n            {tag.toUpperCase()}\n          </Tag>\n        );\n      })}\n    </span>\n  );\n\n  const _renderAction = (record: Record) => {\n    return (\n      <span>\n        <Button type=\"link\" onClick={() => showConfirm(['invite', record])}>\n          Invite {record.name}\n        </Button>\n        <Divider type=\"vertical\" />\n        <Button type=\"link\" onClick={() => showConfirm(['delete', record])}>\n          Delete\n        </Button>\n      </span>\n    );\n  };\n\n  const _renderProgress = (progress: number) => {\n    let status = progress < 40 ? 'warning' : 'normal';\n    if (progress > 70) {\n      status = 'success';\n    }\n    return (\n      <div style={{ minWidth: '200px' }}>\n        <Progress showInfo={false} percent={progress} className={status} />\n      </div>\n    );\n  };\n\n  const _renderText = (text: string) => <Button type=\"link\">{text}</Button>;\n\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'key'\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.name\" defaultMessage=\"名称\" />,\n      dataIndex: 'name',\n      render: _renderText\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.amount\" defaultMessage=\"数额\" />,\n      dataIndex: 'amount'\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.progress\" defaultMessage=\"进度\" />,\n      dataIndex: 'progress',\n      render: _renderProgress\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.tag\" defaultMessage=\"标记\" />,\n      dataIndex: 'tags',\n      render: _renderTags\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.action\" defaultMessage=\"操作\" />,\n      key: 'action',\n      render: _renderAction\n    }\n  ];\n\n  return (\n    <Card\n      bordered={false}\n      className=\"fat-card\"\n      title={<FormatterLocale id=\"dashboard.sales\" defaultMessage=\"销售表单\" />}\n      hoverable\n      bodyStyle={{\n        overflow: 'auto'\n      }}\n    >\n      <Table\n        pagination={false}\n        className=\"no-head-border\"\n        bordered\n        columns={columns}\n        dataSource={tableData}\n      />\n    </Card>\n  );\n};\n\nexport default SaleTable;\n","import React from 'react';\nimport { Card } from 'antd';\nimport getWeather from '@api/dashboard';\nimport Moment from 'moment';\nimport { RainSvg, CloudySvg, OvercastSvg, ThunderSvg, SunSvg } from '@components/SvgIcon';\n\ninterface StateData {\n  daypower: string;\n  daytemp: string;\n  dayweather: string;\n  week: number;\n}\n\ninterface WeatherState {\n  data: StateData[];\n  weekName: string[];\n}\n\nclass Weather extends React.PureComponent<{}, WeatherState> {\n  state: WeatherState = {\n    data: [],\n    weekName: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  };\n\n  componentDidMount() {\n    getWeather().then((res: any) => {\n      const { status, forecasts } = res;\n      if (Number(status) === 1) {\n        this.setState({\n          data: forecasts[0].casts.map((res: any) => {\n            const { daypower, daytemp, dayweather, week } = res;\n            return {\n              daypower,\n              daytemp,\n              dayweather,\n              week\n            };\n          })\n        });\n      }\n    });\n  }\n\n  getWeatherIcon(dayweather: string) {\n    let icon = null;\n    if (dayweather.indexOf('雷') >= 0) {\n      icon = <ThunderSvg />;\n    } else if (dayweather.indexOf('雨') >= 0) {\n      icon = <RainSvg />;\n    } else if (dayweather.indexOf('云') >= 0) {\n      icon = <CloudySvg />;\n    } else if (dayweather.indexOf('阴') >= 0) {\n      icon = <OvercastSvg />;\n    } else if (dayweather.indexOf('晴') >= 0) {\n      icon = <SunSvg />;\n    }\n\n    return icon;\n  }\n\n  render() {\n    const { data, weekName } = this.state;\n    const bodyStyle = {\n      padding: '0'\n    };\n    const WeatherItem = data.map((res, index) => {\n      const { week, daypower, daytemp, dayweather } = res;\n      return (\n        <div className=\"weakly-weather-item\" key={index}>\n          <p>{weekName[Number(week - 1)]}</p>\n          {this.getWeatherIcon(dayweather)}\n          <p>{daypower + '℃ - ' + daytemp + '℃'}</p>\n        </div>\n      );\n    });\n\n    return (\n      <Card bordered={false} className=\"weather-card\" bodyStyle={bodyStyle} hoverable>\n        <div className=\"weather-body\">\n          <div className=\"weather-date-location\">\n            <h2>{Moment().format('dddd')}</h2>\n            <p className=\"text-muted\">{Moment().format('DD MMMM, YYYY')} Amoy, China</p>\n          </div>\n          <div className=\"weather-data\">\n            <h1>{data[0] ? data[0].daypower + '℃ - ' + data[0].daytemp + '℃' : ''}</h1>\n          </div>\n        </div>\n        <div className=\"weakly-weather\">{WeatherItem}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Weather;\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport RowInfoCard from './RowInfoCard';\nimport Weather from './Weather';\nimport Performance from './Performance';\nimport SaleTable from './SaleTable';\nimport GlobalTrends from './GlobalTrends';\nimport './dashboard.less';\n\nconst Dashboard: React.FC = () => (\n  <div className=\"dashboard\">\n    <RowInfoCard />\n    <Row gutter={24}>\n      <Col xl={14} lg={14} md={24} sm={24} xs={24}>\n        <Weather />\n      </Col>\n      <Col xl={10} lg={10} md={24} sm={24} xs={24}>\n        <Performance />\n      </Col>\n    </Row>\n    <Row>\n      <Col span={24}>\n        <GlobalTrends />\n      </Col>\n    </Row>\n    <Row>\n      <Col span={24}>\n        <SaleTable />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default Dashboard;\n"],"sourceRoot":""}