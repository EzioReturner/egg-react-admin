{"version":3,"sources":["webpack:///./src/views/Dashboard/SaleTable.tsx"],"names":["confirm","SaleTable","useState","key","name","amount","progress","tags","tableData","setTableData","showConfirm","type","record","title","content","onOk","Promise","resolve","setTimeout","handleInvite","handleDelete","catch","console","log","onCancel","splice","Number","_t","map","res","index","columns","dataIndex","id","defaultMessage","render","text","status","style","minWidth","showInfo","percent","className","tag","color","length","toUpperCase","onClick","bordered","hoverable","bodyStyle","overflow","pagination","dataSource"],"mappings":"wtDAYA,IAAMA,EAAU,IAAMA,QAmKPC,UAjKa,WAC1B,IADgC,IAwBEC,mBAvBF,CAC9B,CACEC,IAAK,IACLC,KAAM,aACNC,OAAQ,UACRC,SAAU,GACVC,KAAM,CAAC,OAAQ,cAEjB,CACEJ,IAAK,IACLC,KAAM,YACNC,OAAQ,UACRC,SAAU,GACVC,KAAM,CAAC,QAAS,YAElB,CACEJ,IAAK,IACLC,KAAM,YACNC,OAAQ,UACRC,SAAU,GACVC,KAAM,CAAC,OAAQ,cArBa,GAwBzBC,EAxByB,KAwBdC,EAxBc,KA0B1BC,EAAc,SAAC,GAAmC,IAAD,SAAjCC,EAAiC,KAA3BC,EAA2B,KAC7CR,EAASQ,EAATR,KACFS,EAAK,yBAAqBF,EAArB,YAA6BP,EAA7B,KACXJ,EAAQ,CACNa,QACAC,QAAQ,qCAAD,OAAuCH,EAAvC,KACPI,KAAM,WACJ,OAAO,IAAIC,SAAQ,SAAAC,GAEjBC,YAAW,WACI,WAATP,EACFQ,IAEAC,EAAaR,GAEfK,MACC,QACFI,OAAM,kBAAMC,QAAQC,IAAI,oBAE7BC,SAhBM,gBAoBJL,EAAe,aAEfC,EAAe,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,IACtBK,EAAUiB,OAAOC,OAAOvB,EAAM,GAAI,GAClC,IAAMwB,EAAKnB,EAAUoB,KAAI,SAACC,EAAKC,GAC7B,O,+VAAO,CAAP,GACKD,EADL,CAEE1B,IAAK2B,EAAQ,OAGjBrB,EAAakB,IAkDTI,EAAU,CACd,CACElB,MAAO,IACPmB,UAAW,OAEb,CACEnB,MAAO,kBAAC,UAAD,CAAiBoB,GAAG,iBAAiBC,eAAe,iBAC3DF,UAAW,OACXG,OAVgB,SAACC,GAAD,OAAkB,uBAAQzB,KAAK,QAAQyB,KAYzD,CACEvB,MAAO,kBAAC,UAAD,CAAiBoB,GAAG,mBAAmBC,eAAe,iBAC7DF,UAAW,UAEb,CACEnB,MAAO,kBAAC,UAAD,CAAiBoB,GAAG,qBAAqBC,eAAe,iBAC/DF,UAAW,WACXG,OA/BoB,SAAC7B,GACvB,IAAI+B,EAAS/B,EAAW,GAAK,UAAY,SAIzC,OAHIA,EAAW,KACb+B,EAAS,WAGT,yBAAKC,MAAO,CAAEC,SAAU,UACtB,uBAAUC,UAAU,EAAOC,QAASnC,EAAUoC,UAAWL,OA0B7D,CACExB,MAAO,kBAAC,UAAD,CAAiBoB,GAAG,gBAAgBC,eAAe,iBAC1DF,UAAW,OACXG,OArEgB,SAAC5B,GAAD,OAClB,8BACGA,EAAKqB,KAAI,SAAAe,GACR,IAAIC,EAAQD,EAAIE,OAAS,EAAI,aAAe,UAO5C,MANY,UAARF,IACFC,EAAQ,SAEE,YAARD,IACFC,EAAQ,WAGR,uBAAKA,MAAOA,EAAOzC,IAAKwC,GACrBA,EAAIG,qBA2Db,CACEjC,MAAO,kBAAC,UAAD,CAAiBoB,GAAG,mBAAmBC,eAAe,iBAC7D/B,IAAK,SACLgC,OAvDkB,SAACvB,GACrB,OACE,8BACE,uBAAQD,KAAK,OAAOoC,QAAS,kBAAMrC,EAAY,CAAC,SAAUE,MAA1D,UACUA,EAAOR,MAEjB,uBAASO,KAAK,aACd,uBAAQA,KAAK,OAAOoC,QAAS,kBAAMrC,EAAY,CAAC,SAAUE,MAA1D,cAoDN,OACE,uBACEoC,UAAU,EACVN,UAAU,WACV7B,MAAO,kBAAC,UAAD,CAAiBoB,GAAG,kBAAkBC,eAAe,6BAC5De,WAAS,EACTC,UAAW,CACTC,SAAU,SAGZ,uBACEC,YAAY,EACZV,UAAU,iBACVM,UAAQ,EACRjB,QAASA,EACTsB,WAAY7C","file":"static/js/src-views-Dashboard-SaleTable.33419f80.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Table, Divider, Tag, Progress, Modal, Button } from 'antd';\nimport FormatterLocale from '@components/FormatterLocale';\n\ninterface Record {\n  name: string;\n  key: string | number;\n  amount: string;\n  progress: number;\n  tags: string[];\n}\n\nconst confirm = Modal.confirm;\n\nconst SaleTable: React.FC = () => {\n  const initTableData: Record[] = [\n    {\n      key: '1',\n      name: 'John Brown',\n      amount: '$ 32.77',\n      progress: 60,\n      tags: ['nice', 'developer']\n    },\n    {\n      key: '2',\n      name: 'Jim Green',\n      amount: '$ 72.11',\n      progress: 82,\n      tags: ['loser', 'waiting']\n    },\n    {\n      key: '3',\n      name: 'Joe Black',\n      amount: '$ 56.21',\n      progress: 30,\n      tags: ['cool', 'teacher']\n    }\n  ];\n  const [tableData, setTableData] = useState(initTableData);\n\n  const showConfirm = ([type, record]: [string, any]) => {\n    const { name } = record;\n    const title = `Do you want to ${type} ${name}?`;\n    confirm({\n      title,\n      content: `clicked the OK button, to confirm ${type}d`,\n      onOk: () => {\n        return new Promise(resolve => {\n          // setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n          setTimeout(() => {\n            if (type === 'invite') {\n              handleInvite();\n            } else {\n              handleDelete(record);\n            }\n            resolve();\n          }, 2000);\n        }).catch(() => console.log('Oops errors!'));\n      },\n      onCancel() {}\n    });\n  };\n\n  const handleInvite = () => {};\n\n  const handleDelete = ({ key }: { key: number }) => {\n    tableData.splice(Number(key - 1), 1);\n    const _t = tableData.map((res, index) => {\n      return {\n        ...res,\n        key: index + 1\n      };\n    });\n    setTableData(_t);\n  };\n\n  const _renderTags = (tags: string[]) => (\n    <span>\n      {tags.map(tag => {\n        let color = tag.length > 5 ? 'processing' : 'success';\n        if (tag === 'loser') {\n          color = 'error';\n        }\n        if (tag === 'waiting') {\n          color = 'default';\n        }\n        return (\n          <Tag color={color} key={tag}>\n            {tag.toUpperCase()}\n          </Tag>\n        );\n      })}\n    </span>\n  );\n\n  const _renderAction = (record: Record) => {\n    return (\n      <span>\n        <Button type=\"link\" onClick={() => showConfirm(['invite', record])}>\n          Invite {record.name}\n        </Button>\n        <Divider type=\"vertical\" />\n        <Button type=\"link\" onClick={() => showConfirm(['delete', record])}>\n          Delete\n        </Button>\n      </span>\n    );\n  };\n\n  const _renderProgress = (progress: number) => {\n    let status = progress < 40 ? 'warning' : 'normal';\n    if (progress > 70) {\n      status = 'success';\n    }\n    return (\n      <div style={{ minWidth: '200px' }}>\n        <Progress showInfo={false} percent={progress} className={status} />\n      </div>\n    );\n  };\n\n  const _renderText = (text: string) => <Button type=\"link\">{text}</Button>;\n\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'key'\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.name\" defaultMessage=\"名称\" />,\n      dataIndex: 'name',\n      render: _renderText\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.amount\" defaultMessage=\"数额\" />,\n      dataIndex: 'amount'\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.progress\" defaultMessage=\"进度\" />,\n      dataIndex: 'progress',\n      render: _renderProgress\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.tag\" defaultMessage=\"标记\" />,\n      dataIndex: 'tags',\n      render: _renderTags\n    },\n    {\n      title: <FormatterLocale id=\"dashboard.action\" defaultMessage=\"操作\" />,\n      key: 'action',\n      render: _renderAction\n    }\n  ];\n\n  return (\n    <Card\n      bordered={false}\n      className=\"fat-card\"\n      title={<FormatterLocale id=\"dashboard.sales\" defaultMessage=\"销售表单\" />}\n      hoverable\n      bodyStyle={{\n        overflow: 'auto'\n      }}\n    >\n      <Table\n        pagination={false}\n        className=\"no-head-border\"\n        bordered\n        columns={columns}\n        dataSource={tableData}\n      />\n    </Card>\n  );\n};\n\nexport default SaleTable;\n"],"sourceRoot":""}