{"version":3,"sources":["webpack:///./src/views/Program/Analysis/DistributeCard.tsx"],"names":["ChartCard","props","title","option","CardTitle","className","style","marginLeft","hoverable","bordered","marginBottom","undefined","bodyStyle","overflow","inject","observer","programStore","getChartOption","circleOption","barOption","cityOption","provinceOption","lineOption","gutter","xl","lg","md","sm","xs"],"mappings":"ssBAaMA,EAAY,SAACC,GACjB,IAGQC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OACTC,EACJ,yBAAKC,UAAU,cACZH,EACD,yBAAKG,UAAU,WACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,MAAO,CACLC,WAAY,YAMtB,OACE,uBACEC,WAAS,EACTN,MAAOE,EACPC,UAAU,YACVI,UAAU,EACVH,MAAiB,iBAAVJ,EAvBwB,CACjCQ,aAAc,aAsBoBC,EAChCC,UAAW,CAAEC,SAAU,WAEvB,kBAAC,UAAD,CAAcV,OAAQA,MA0CbW,sBAAO,eAAPA,CAAuBC,aArCgB,SAAAd,GACpD,IAD6D,EAEpDA,EAGPe,aACEC,eAAkBC,EANuC,EAMvCA,aAAcC,EANyB,EAMzBA,UAAWC,EANc,EAMdA,WAAYC,EANE,EAMFA,eAAgBC,EANd,EAMcA,WAI3E,OACE,kBAAC,WAAD,KACE,uBAAKC,OAAQ,IACX,uBAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC5B,EAAD,CAAWE,MAAM,eAAKC,OAAQe,KAEhC,uBAAKM,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC5B,EAAD,CAAWE,MAAM,eAAKC,OAAQgB,MAGlC,2BACE,uBAAKK,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC5B,EAAD,CAAWE,MAAM,eAAKC,OAAQmB,MAGlC,uBAAKC,OAAQ,IACX,uBAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC5B,EAAD,CAAWE,MAAM,eAAKC,OAAQ,CAACgB,EAAWC,MAE5C,uBAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC5B,EAAD,CAAWE,MAAM,eAAKC,OAAQ,CAACgB,EAAWE","file":"static/js/src-views-Program-Analysis-DistributeCard.c581ec86.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, Row, Col } from 'antd';\nimport EchartsReact from '@components/Echarts';\nimport { observer, inject } from 'mobx-react';\nimport ProgramStore from '@store/programStore';\nimport { RedoOutlined, CloudDownloadOutlined } from '@ant-design/icons';\n\ninterface DistributeCardProps {}\n\ninterface DistributeCardInjected extends DistributeCardProps {\n  programStore: ProgramStore;\n}\n\nconst ChartCard = (props: any) => {\n  const style: React.CSSProperties = {\n    marginBottom: '24px'\n  };\n  const { title, option } = props;\n  const CardTitle = (\n    <div className=\"titleNanme\">\n      {title}\n      <div className=\"iconBar\">\n        <RedoOutlined />\n        <CloudDownloadOutlined\n          style={{\n            marginLeft: '10px'\n          }}\n        />\n      </div>\n    </div>\n  );\n  return (\n    <Card\n      hoverable\n      title={CardTitle}\n      className=\"thin-card\"\n      bordered={false}\n      style={title !== '省份' ? style : undefined}\n      bodyStyle={{ overflow: 'hidden' }}\n    >\n      <EchartsReact option={option} />\n    </Card>\n  );\n};\n\nconst DistributeCard: React.FC<DistributeCardProps> = props => {\n  const injected = () => {\n    return props as DistributeCardInjected;\n  };\n  const {\n    programStore: {\n      getChartOption: { circleOption, barOption, cityOption, provinceOption, lineOption }\n    }\n  } = injected();\n\n  return (\n    <Fragment>\n      <Row gutter={24}>\n        <Col xl={12} lg={12} md={24} sm={24} xs={24}>\n          <ChartCard title=\"性别\" option={circleOption} />\n        </Col>\n        <Col xl={12} lg={12} md={24} sm={24} xs={24}>\n          <ChartCard title=\"年龄\" option={barOption} />\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={24} lg={24} md={24} sm={24} xs={24}>\n          <ChartCard title=\"渠道\" option={lineOption} />\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col xl={12} lg={12} md={24} sm={24} xs={24}>\n          <ChartCard title=\"城市\" option={[barOption, cityOption]} />\n        </Col>\n        <Col xl={12} lg={12} md={24} sm={24} xs={24}>\n          <ChartCard title=\"省份\" option={[barOption, provinceOption]} />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default inject('programStore')(observer(DistributeCard));\n"],"sourceRoot":""}