{"version":3,"sources":["webpack:///./src/views/Form/StepForm/form.module.less","webpack:///./src/views/Form/StepForm/formStore.ts","webpack:///./src/views/Form/StepForm/index.tsx"],"names":["module","exports","configure","enforceActions","formStore","steps","getStepChild","current","component","this","id","title","React","lazy","submitting","values","data","observable","detail","user","action","setTimeout","nextStep","Step","StepForm","observer","initStep","Child","defaultMessage","subTitle","bordered","className","styles","map","item","key","fallback","spinning","Component"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,gBAAgB,uBAAuB,aAAa,oBAAoB,MAAQ,eAAe,KAAO,cAAc,YAAc,qBAAqB,SAAW,oB,w7BCEpLC,YAAU,CAAEC,eAAgB,W,IAyEtBC,EAAY,I,kBAjDhB,aAAe,IAAD,Q,4FAAA,yFAFdC,WAEc,OAoBdC,aAAe,WACb,OAAO,EAAKD,MAAM,EAAKE,SAASC,WArBpB,4EACZC,KAAKJ,MAAQ,CACX,CACEK,GAAI,kBACJC,MAAO,2BACPH,UAAWI,IAAMC,MAAK,kBAAM,mGAE9B,CACEH,GAAI,kBACJC,MAAO,2BACPH,UAAWI,IAAMC,MAAK,kBAAM,mGAE9B,CACEH,GAAI,kBACJC,MAAO,eACPH,UAAWI,IAAMC,MAAK,kBAAM,oG,0DAchCJ,KAAKF,UACLE,KAAKK,YAAa,I,+BAGHC,GACfN,KAAKO,KAAOD,O,sDA3CbE,K,yEAA6B,K,8BAC7BA,K,yEAAiC,K,wBACjCA,K,wEAA4B,CAC3BN,MAAO,GACPO,OAAQ,GACRC,KAAM,O,4BA4BPC,K,oFAAkB,WACjB,EAAKb,QAAU,M,0BAGhBa,K,+FAKAA,K,+FAIAA,K,oFAAgB,WACf,EAAKb,c,4BAGNa,K,oFAAkB,WACjB,EAAKN,YAAa,EAClBO,YAAW,WACT,EAAKC,aACJ,S,GAMQlB,a,u5CCrEPmB,E,IAAAA,KAEFC,EADLC,Y,sdAGGrB,UAAUsB,a,+BAGF,IACAnB,EAAiCH,UAAjCG,QAASF,EAAwBD,UAAxBC,MACXsB,GAAQrB,EAD2BF,UAAjBE,gBAExB,OACE,kBAAC,UAAD,CACEK,MAAO,kBAAC,UAAD,CAAiBD,GAAG,qBAAqBkB,eAAe,6BAC/DC,SACE,kBAAC,UAAD,CACEnB,GAAG,oBACHkB,eAAe,sYAInB,uBAAME,UAAU,EAAOC,UAAU,cAC/B,yBAAKA,UAAWC,IAAO3B,OACrB,uBAAOE,QAASA,GACbF,EAAM4B,KAAI,SAAAC,GAAI,OACb,kBAACX,EAAD,CACEY,IAAKD,EAAKxB,GACVC,MAAO,kBAAC,UAAD,CAAiBD,GAAIwB,EAAKxB,GAAIkB,eAAgBM,EAAKvB,eAKlE,kBAAC,WAAD,CAAUyB,SAAU,kBAAC,UAAD,CAASC,UAAQ,KACnC,kBAACV,EAAD,c,8BA9BWf,IAAM0B,a,EAsCdd","file":"static/js/src-views-Form-StepForm.d8e58927.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-overflow\":\"text-overflow--1dHYe\",\"close-Icon\":\"close-Icon--NAWW_\",\"steps\":\"steps--1bF28\",\"step\":\"step--3rlAq\",\"buttonGroup\":\"buttonGroup--3H94a\",\"descript\":\"descript--3mBgT\"};","import { observable, configure, action } from 'mobx';\nimport React from 'react';\n\nconfigure({ enforceActions: 'always' });\n\ninterface StepObj {\n  id: string;\n  title: string;\n  component: any;\n}\n\ninterface StepData {\n  title: string;\n  detail: string;\n  user: string;\n}\n\nclass FormStore {\n  @observable current: number = 0;\n  @observable submitting: boolean = false;\n  @observable data: StepData = {\n    title: '',\n    detail: '',\n    user: ''\n  };\n  steps: Array<StepObj>;\n\n  constructor() {\n    this.steps = [\n      {\n        id: 'form.stepTitle1',\n        title: '填写信息',\n        component: React.lazy(() => import(/* webpackChunkName: \"Step1\" */ './Step1'))\n      },\n      {\n        id: 'form.stepTitle2',\n        title: '确认报告',\n        component: React.lazy(() => import(/* webpackChunkName: \"Step2\" */ './Step2'))\n      },\n      {\n        id: 'form.stepTitle3',\n        title: '完成',\n        component: React.lazy(() => import(/* webpackChunkName: \"Step3\" */ './Step3'))\n      }\n    ];\n  }\n\n  getStepChild = (): any => {\n    return this.steps[this.current].component;\n  };\n\n  @action initStep = (): void => {\n    this.current = 0;\n  };\n\n  @action nextStep(): void {\n    this.current++;\n    this.submitting = false;\n  }\n\n  @action setValue(values: StepData): void {\n    this.data = values;\n  }\n\n  @action onPrev = (): void => {\n    this.current--;\n  };\n\n  @action onSubmit = (): void => {\n    this.submitting = true;\n    setTimeout(() => {\n      this.nextStep();\n    }, 1000);\n  };\n}\n\nconst formStore = new FormStore();\n\nexport default formStore;\n","import React, { Suspense } from 'react';\nimport { Card, Steps } from 'antd';\nimport PageWrapper from '@components/PageWrapper';\nimport Loading from '@components/Loading';\nimport FormatterLocale from '@components/FormatterLocale';\nimport { observer } from 'mobx-react';\nimport styles from './form.module.less';\nimport formStore from './formStore';\n\nconst { Step } = Steps;\n@observer\nclass StepForm extends React.Component {\n  componentDidMount() {\n    formStore.initStep();\n  }\n\n  render() {\n    const { current, steps, getStepChild } = formStore;\n    const Child = getStepChild();\n    return (\n      <PageWrapper\n        title={<FormatterLocale id=\"form.stepFormTitle\" defaultMessage=\"分步表单\" />}\n        subTitle={\n          <FormatterLocale\n            id=\"form.stepSubtitle\"\n            defaultMessage=\"表单页用将一个冗长或用户不熟悉的表单任务分成多个步骤，指导用户完成。于向用户收集或验证信息，基础表单常见于数据项较少的表单场景。\"\n          />\n        }\n      >\n        <Card bordered={false} className=\"fat-header\">\n          <div className={styles.steps}>\n            <Steps current={current}>\n              {steps.map(item => (\n                <Step\n                  key={item.id}\n                  title={<FormatterLocale id={item.id} defaultMessage={item.title} />}\n                />\n              ))}\n            </Steps>\n          </div>\n          <Suspense fallback={<Loading spinning />}>\n            <Child />\n          </Suspense>\n        </Card>\n      </PageWrapper>\n    );\n  }\n}\n\nexport default StepForm;\n"],"sourceRoot":""}