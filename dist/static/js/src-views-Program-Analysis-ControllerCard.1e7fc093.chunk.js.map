{"version":3,"sources":["webpack:///./src/views/Program/Analysis/ControllerCard.tsx"],"names":["Option","inject","observer","props","programStore","getOptions","Array","fill","map","res","index","key","value","Math","random","toString","substr","marginRight","sx","et","ControlHead","className","placeholder","size","style","type","showUnDefined","title","bordered","hoverable","bodyStyle","display","alignItems","minWidth","justifyContent","flex","marginLeft","defaultChecked","onChange","checked","changeShowUnDefined"],"mappings":"y3BAUQA,E,IAAAA,OAoFOC,sBAAO,eAAPA,CAAuBC,aAnFT,SAAAC,GAC3B,IAIQC,EAHCD,EAGDC,aAEFC,EAAa,WACjB,OAAOC,MAAM,GACVC,KAAK,GACLC,KAAI,SAACC,EAAaC,GACjB,OACE,kBAACV,EAAD,CACEW,IAAKD,EACLE,MAAOC,KAAKC,SACTC,SAAS,IACTC,OAAO,IAETH,KAAKC,SACHC,SAAS,IACTC,OAAO,QAUdC,EAAc,CAClBC,GAAI,CACFD,YAAa,QAEfE,GAAI,CACFF,YAAa,QAIXG,EACJ,yBAAKC,UAAU,iBACb,kBAAC,IAAD,MACA,0BAAMA,UAAU,kBAAhB,4BACA,uBAAQC,YAAY,kBAAQC,KAAK,SAC9BlB,KAEH,uBAAQiB,YAAY,qBAAMC,KAAK,SAC5BlB,KAEH,uBAAYkB,KAAK,QAAQC,MAAOP,EAAYC,KAC5C,uBAAQO,KAAK,UAAUF,KAAK,SAA5B,iBAKIG,EAAkBtB,EAAlBsB,cAER,OACE,uBACEH,KAAK,QACLI,MAAOP,EACPQ,UAAU,EACVC,WAAS,EACTR,UAAU,cACVS,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,SAAU,QACVC,eAAgB,kBAGlB,yBAAKV,MAAO,CAAEW,KAAM,EAAGC,WAAY,SACjC,uBAAQC,eAAgBX,EAAeF,MAAOP,EAAYE,GAAImB,SA9C/C,SAACC,GACpBnC,EAAaoC,oBAAoBD,MA8C7B,0BAAMlB,UAAU,kBAAhB,uBAEF,0BAAMA,UAAU,6BAAhB,uGAEE,kBAAC,IAAD","file":"static/js/src-views-Program-Analysis-ControllerCard.1e7fc093.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Select, Button, DatePicker, Switch } from 'antd';\nimport { observer, inject } from 'mobx-react';\nimport ProgramStore from '@store/programStore';\nimport { FilterOutlined, QuestionCircleOutlined } from '@ant-design/icons';\n\ninterface ControllerInjected {\n  programStore: ProgramStore;\n}\n\nconst { Option } = Select;\nconst Controller: React.FC = props => {\n  const injected = () => {\n    return props as ControllerInjected;\n  };\n\n  const { programStore } = injected();\n\n  const getOptions = () => {\n    return Array(5)\n      .fill(1)\n      .map((res: number, index: number) => {\n        return (\n          <Option\n            key={index}\n            value={Math.random()\n              .toString(36)\n              .substr(2)}\n          >\n            {Math.random()\n              .toString(36)\n              .substr(2)}\n          </Option>\n        );\n      });\n  };\n\n  const handleSwitch = (checked: boolean) => {\n    programStore.changeShowUnDefined(checked);\n  };\n\n  const marginRight = {\n    sx: {\n      marginRight: '16px'\n    },\n    et: {\n      marginRight: '8px'\n    }\n  };\n\n  const ControlHead = (\n    <div className=\"headerContent\">\n      <FilterOutlined />\n      <span className=\"headerTextSpan\">筛选条件</span>\n      <Select placeholder=\"全部APP\" size=\"small\">\n        {getOptions()}\n      </Select>\n      <Select placeholder=\"双平台\" size=\"small\">\n        {getOptions()}\n      </Select>\n      <DatePicker size=\"small\" style={marginRight.sx} />\n      <Button type=\"primary\" size=\"small\">\n        查询\n      </Button>\n    </div>\n  );\n  const { showUnDefined } = programStore;\n\n  return (\n    <Card\n      size=\"small\"\n      title={ControlHead}\n      bordered={false}\n      hoverable\n      className=\"controlHead\"\n      bodyStyle={{\n        display: 'flex',\n        alignItems: 'center',\n        minWidth: '580px',\n        justifyContent: 'space-between'\n      }}\n    >\n      <div style={{ flex: 1, marginLeft: '16px' }}>\n        <Switch defaultChecked={showUnDefined} style={marginRight.et} onChange={handleSwitch} />\n        <span className=\"headerTextSpan\">未识别</span>\n      </div>\n      <span className=\"headerTextSpan rightSpace\">\n        符合当前筛选条件的总用户数为：21,312,393\n        <QuestionCircleOutlined />\n      </span>\n    </Card>\n  );\n};\n\nexport default inject('programStore')(observer(Controller));\n"],"sourceRoot":""}