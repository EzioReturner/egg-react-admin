{"version":3,"sources":["webpack:///./src/views/Dashboard/RowInfoCard.tsx"],"names":["RowInfoCard","details","icon","BoxSvg","tips","title","num","tipIcon","className","OrdersSvg","SalesSvg","EmpolyeesSvg","InfoCard","props","index","bordered","hoverable","style","marginTop","component","id","defaultMessage","marginLeft","fontSize","gutter","map","dl","xl","lg","md","sm","xs","key","marginBottom"],"mappings":"ikCAuFeA,UApEe,WAC5B,IAAMC,EAAU,CACd,CACEC,KAAMC,SACNC,KAAM,mBACNC,MAAO,gBACPC,IAAK,UACLC,QAAS,kBAAC,IAAD,CAA2BC,UAAU,UAEhD,CACEN,KAAMO,YACNL,KAAM,qBACNC,MAAO,SACPC,IAAK,OACLC,QAAS,kBAAC,IAAD,CAAeC,UAAU,UAEpC,CACEN,KAAMQ,WACNN,KAAM,eACNC,MAAO,QACPC,IAAK,OACLC,QAAS,kBAAC,IAAD,CAAcC,UAAU,UAEnC,CACEN,KAAMS,eACNP,KAAM,qBACNC,MAAO,YACPC,IAAK,MACLC,QAAS,kBAAC,IAAD,CAAcC,UAAU,WAG/BI,EAAW,SAACC,GAA0B,IAClCX,EAA2CW,EAA3CX,KAAME,EAAqCS,EAArCT,KAAMC,EAA+BQ,EAA/BR,MAAOC,EAAwBO,EAAxBP,IAAKC,EAAmBM,EAAnBN,QAASO,EAAUD,EAAVC,MACzC,OACE,uBAAMN,UAAU,qBAAqBO,UAAU,EAAOC,WAAS,GAC7D,yBAAKR,UAAU,OACb,kBAAC,IAAD,CAAMS,MAAO,CAAEC,UAAW,QAAUC,UAAWjB,IAC/C,yBAAKM,UAAU,cACb,uBAAGA,UAAU,SACV,kBAAC,UAAD,CAAiBY,GAAE,2BAAsBN,EAAtB,UAAqCO,eAAgBhB,KAE3E,wBAAIG,UAAU,OAAOF,KAGzB,uBAAGE,UAAU,QACVD,EAEC,kBAAC,UAAD,CACEU,MAAO,CAAEK,WAAY,MAAOC,SAAU,QACtCH,GAAE,2BAAsBN,EAAtB,SACFO,eAAgBjB,OAO5B,OACE,uBAAKoB,OAAQ,GAAIhB,UAAU,gBACxBP,EAAQwB,KAAI,SAACC,EAAIZ,GAAL,OACX,uBAAKa,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAKlB,EAAOG,MAAO,CAAEgB,aAAc,SAC7E,kBAACrB,EAAD,KAAcc,EAAd,CAAkBZ,MAAOA","file":"static/js/src-views-Dashboard-RowInfoCard.7ad0cf5d.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card } from 'antd';\nimport { BoxSvg, EmpolyeesSvg, OrdersSvg, SalesSvg } from '@components/SvgIcon';\nimport FormatterLocale from '@components/FormatterLocale';\nimport Icon, {\n  RedoOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  ShakeOutlined\n} from '@ant-design/icons';\ninterface InfoCardProps {\n  icon: any;\n  tips: string;\n  title: string;\n  num: string | number;\n  tipIcon: React.ReactNode;\n  index: string | number;\n}\n\nconst RowInfoCard: React.FC = () => {\n  const details = [\n    {\n      icon: BoxSvg,\n      tips: '65% lower growth',\n      title: 'Total Revenue',\n      num: '$65,650',\n      tipIcon: <ExclamationCircleOutlined className=\"mr-2\" />\n    },\n    {\n      icon: OrdersSvg,\n      tips: 'Product-wise sales',\n      title: 'Orders',\n      num: '3455',\n      tipIcon: <ShakeOutlined className=\"mr-2\" />\n    },\n    {\n      icon: SalesSvg,\n      tips: 'Weekly Sales',\n      title: 'Sales',\n      num: '5693',\n      tipIcon: <FundOutlined className=\"mr-2\" />\n    },\n    {\n      icon: EmpolyeesSvg,\n      tips: 'Product-wise sales',\n      title: 'Employees',\n      num: '246',\n      tipIcon: <RedoOutlined className=\"mr-2\" />\n    }\n  ];\n  const InfoCard = (props: InfoCardProps) => {\n    const { icon, tips, title, num, tipIcon, index } = props;\n    return (\n      <Card className=\"info-card fat-card\" bordered={false} hoverable>\n        <div className=\"top\">\n          <Icon style={{ marginTop: '12px' }} component={icon as any} />\n          <div className=\"right-part\">\n            <p className=\"title\">\n              {<FormatterLocale id={`dashboard.rowInfo${index}.title`} defaultMessage={title} />}\n            </p>\n            <h3 className=\"num\">{num}</h3>\n          </div>\n        </div>\n        <p className=\"tips\">\n          {tipIcon}\n          {\n            <FormatterLocale\n              style={{ marginLeft: '8px', fontSize: '13px' }}\n              id={`dashboard.rowInfo${index}.tips`}\n              defaultMessage={tips}\n            />\n          }\n        </p>\n      </Card>\n    );\n  };\n  return (\n    <Row gutter={24} className=\"rowInfo-card\">\n      {details.map((dl, index) => (\n        <Col xl={6} lg={12} md={12} sm={24} xs={24} key={index} style={{ marginBottom: '24px' }}>\n          <InfoCard {...dl} index={index} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default RowInfoCard;\n"],"sourceRoot":""}